import{b as y}from"./chunk-BJE3JKBP.js";import{a as f,b as l,c as a}from"./chunk-2VMXMS7J.js";import{inject as v}from"@angular/core";import{ActivatedRoute as P,Router as H,RouterOutlet as O}from"@angular/router";import{inject as j}from"@angular/core";import{HttpHeaders as I}from"@angular/common/http";import{from as R}from"rxjs";import{switchMap as s}from"rxjs/operators";import*as c from"@angular/core";import*as b from"@angular/common/http";import{runInInjectionContext as g}from"@angular/core";import*as n from"@angular/core";var m=class r{constructor(t){this.injector=t}remote;readyPromise;initRemote(){return this.readyPromise||(this.readyPromise=a(this,null,function*(){let t=yield y({remoteName:"auth",exposedModule:"./AuthService"});return this.remote=g(this.injector,()=>new t.AuthService),this.remote})),this.readyPromise}authorizationHeader(t=200,e=10){return a(this,null,function*(){let i=yield this.initRemote(),o,d=0;do{if(o=yield i.authorizationHeader(),o)break;if(d++,d>=e)throw new Error("Auth header not ready after max retries");yield new Promise(T=>setTimeout(T,t))}while(!o);return o})}static \u0275fac=function(e){return new(e||r)(n.\u0275\u0275inject(n.EnvironmentInjector))};static \u0275prov=n.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})};var u=class r{constructor(t,e){this.http=t;this.auth=e}withAuthHeaders(t){return R(this.auth.authorizationHeader()).pipe(s(e=>{let i=new I(l(f({},t?.headers??{}),{Authorization:e}));return[l(f({},t),{headers:i})]}))}get(t,e){return this.withAuthHeaders(e).pipe(s(i=>this.http.get(t,i)))}post(t,e,i){return this.withAuthHeaders(i).pipe(s(o=>this.http.post(t,e,o)))}put(t,e,i){return this.withAuthHeaders(i).pipe(s(o=>this.http.put(t,e,o)))}delete(t,e){return this.withAuthHeaders(e).pipe(s(i=>this.http.delete(t,i)))}static \u0275fac=function(e){return new(e||r)(c.\u0275\u0275inject(b.HttpClient),c.\u0275\u0275inject(m))};static \u0275prov=c.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})};import*as A from"@angular/core";var h=class r{http=j(u);baseUrl="http://localhost:8080/mbe-user/api/v1";checkAccountType(t){return this.http.get(`${this.baseUrl}/users/check-account-type?username=${t}`)}static \u0275fac=function(e){return new(e||r)};static \u0275prov=A.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})};import*as p from"@angular/core";var S=class r{route=v(P);router=v(H);accountTypeService=v(h);ngOnInit(){return a(this,null,function*(){this.route.paramMap.subscribe(t=>{let e=t.get("username");if(!e){this.router.navigate(["lk","feeds"]);return}this.accountTypeService.checkAccountType(e).subscribe(({accountType:i})=>{this.navigateToAccountType(i,e)},()=>{this.router.navigate(["lk","feeds"])})})})}navigateToAccountType(t,e){t==="PERSONAL"?this.router.navigate(["lk","p",e]):t==="BUSINESS"&&this.router.navigate(["lk","b",e])}static \u0275fac=function(e){return new(e||r)};static \u0275cmp=p.\u0275\u0275defineComponent({type:r,selectors:[["mfe-shell-profile"]],decls:1,vars:0,template:function(e,i){e&1&&p.\u0275\u0275element(0,"router-outlet")},dependencies:[O],encapsulation:2})};export{S as ProfileComponent};
